plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.sonarqube' version '4.4.1.3373'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.security:spring-security-oauth2-jose'
	implementation 'org.springframework.kafka:spring-kafka' // Без версии, BOM подтянет 3.2.4
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310' // Для JSON-сериализации
	implementation 'org.liquibase:liquibase-core'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'
	implementation 'org.projectlombok:lombok:1.18.34'
	annotationProcessor 'org.projectlombok:lombok:1.18.34'
	implementation 'org.postgresql:postgresql:42.7.4'
	implementation 'software.amazon.awssdk:s3:2.26.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:postgresql:1.20.2'
	testImplementation 'org.testcontainers:junit-jupiter:1.20.2'
	testImplementation 'org.testcontainers:kafka:1.20.2' // Для тестирования Kafka
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
sonarqube {
	properties {
		property "sonar.projectKey", "ImageServiceAPI2"
		property "sonar.projectName", "Image Service"
		property "sonar.projectVersion", "1.0"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.organization", "daniilkhel"
		property "sonar.login", System.getenv("SONAR_TOKEN")
		property "sonar.gradle.skipCompile", "true"
		property "sonar.branch.name", "main"
	}
}